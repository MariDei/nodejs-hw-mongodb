{
  "openapi": "3.1.0",
  "info": {
    "title": "Contacts App",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-app-yzoq.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Retrieve a list of contacts with optional filtering and sorting",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of contacts per page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "_id"
            },
            "description": "Field to sort by. Default value is _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            },
            "description": "Order to sort the results. Can be 'asc' or 'desc'."
          },
          {
            "in": "query",
            "name": "isFavorite",
            "schema": {
              "type": "boolean",
              "enum": [true, false],
              "example": true
            },
            "description": "This field allows to select favourite contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 20
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 3
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "Details to create a contact",
                "type": "object",
                "required": ["name", "phoneNumber", "contactType"],
                "properties": {
                  "name": {
                    "description": "Contact's full name",
                    "type": "string",
                    "example": "Marta Guldman"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+380395452294"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "mg@icloud.com"
                  },
                  "isFavorite": {
                    "description": "Whether is contact favourite?",
                    "type": "boolean",
                    "example": false,
                    "default": false
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": ["work", "home", "personal"],
                    "example": "home",
                    "default": "personal"
                  },
                  "photo": {
                    "description": "Contact's photo-URL",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContactById",
        "description": "Get contact by unique id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66d8a90efca05bf0ee47593a"
            },
            "description": "ID of the contact to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 66d8a90efca05bf0ee47593a!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Patch contact by id",
        "operationId": "updateContact",
        "description": "Patch contact by unique id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "objectId",
              "example": "66d8a90efca05bf0ee47593a"
            },
            "description": "ID of the contact to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "Fields for the contact to be updated.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "Marta Guldman"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+380395452294"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "mg@icloud.com",
                    "default": false
                  },
                  "isFavourite": {
                    "description": "Whether is contact favourite?",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": ["work", "home", "personal"],
                    "example": "home",
                    "default": "personal"
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched contact with id 66d8a90efca05bf0ee47593a!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by unique id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66d8a90efca05bf0ee47593a"
            },
            "description": "Contact by id to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Contact was deleted successfully. Successful operation - No Content. "
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "operationId": "registerUser",
        "description": "Register a new user with their name, email, and password.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "User details required for registration",
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "_id": {
                    "description": "User's id.",
                    "type": "string",
                    "format": "objectId",
                    "example": "66d8a90efca05bf0ee47593a"
                  },
                  "name": {
                    "description": "User's full name",
                    "type": "string",
                    "example": "Marta Guldman"
                  },
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "mg@icloud.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "MG07sept24"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "description": "Backend-generated unique id.",
                          "type": "string",
                          "format": "objectId",
                          "example": "66d8a90efca05bf0ee47593a"
                        },
                        "name": {
                          "description": "User's full name",
                          "type": "string",
                          "example": "Marta Guldman"
                        },
                        "email": {
                          "description": "User's email address",
                          "type": "string",
                          "example": "mg@icloud.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authenticate a user with their email and password.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "User credentials required for authentication",
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "mg@icloud.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "MG07sept24"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "token"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "token": {
                      "description": "JWT token for authentication",
                      "type": "string",
                      "example": "fXZcvmFqfm8s2hLOs1iVmFy/8V/lIxAwdP8GrcuK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },

    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh session",
        "operationId": "refreshUsersSession",
        "description": "Refresh the user’s authentication token using a valid refresh token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Refresh token required to obtain a new access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "description": "Refresh token used to obtain a new access token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NmQ2MzEwMDQxZDUwYzBhZGYyOWQ0ZTgiLCJlbWFpbCI6ImQubWFyaWFubmFAaWNsb3VkLmNvbSIsImlhdCI6MTcyNTQ2NTIzNSwiZXhwIjoxNzI1NDY1NTM1fQ.7Z4RnrX1urgzHrZLdpsrlPehDv5BvZcRZEPiyxUjMPw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "New JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NmQ2MzEwMDQxZDUwYzBhZGYyOWQ0ZTgiLCJlbWFpbCI6ImQubWFyaWFubmFAaWNsb3VkLmNvbSIsImlhdCI6MTcyNTQ2NTIzNSwiZXhwIjoxNzI1NDY1NTM1fQ.7Z4RnrX1urgzHrZLdpsrlPehDv5BvZcRZEPiyxUjMPw"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "Log out an authenticated user by invalidating their JWT token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "The user is logged out. Successful operation - No Content. "
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send password reset email",
        "operationId": "requestResetToken",
        "description": "Send an email to the user with instructions to reset their password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Email required to send the password reset instructions",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "description": "User's email address for password reset",
                    "type": "string",
                    "format": "email",
                    "example": "mg@icloud.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password for user",
        "operationId": "resetPassword",
        "description": "Password reset permission",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Password reset details including the new password and reset token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "token"],
                "properties": {
                  "password": {
                    "description": "New password",
                    "type": "string",
                    "example": "mg@icloud.com"
                  },
                  "token": {
                    "description": "The token used to verify the password reset request",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NmM2ZmQ2MzZhNzk2ODk5MTYzNDBmZTciLCJlbWFpbCI6ImNodW1hY2hvY2xAZ21haWwuY29tIiwiaWF0IjoxNzI0NzYzNzkwLCJleHAiOjE3MjQ3NjQwOTB9.n8nu12RjBqv0g9twrPExpV-9bkDVfDNZDPSbHx6hwyw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Contact's id.",
            "type": "string",
            "format": "objectId",
            "example": "66d8a90efca05bf0ee47593a"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "Marta Guldman"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "+380395452294"
          },
          "email": {
            "description": "Contact's email address",
            "type": "string",
            "example": "mg@icloud.com"
          },
          "isFavorite": {
            "description": "Whether is contact favourite?",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": ["work", "home", "personal"],
            "example": "home",
            "default": "personal"
          },
          "userId": {
            "description": "Unique id for the user who owns the contact",
            "type": "string",
            "format": "objectId",
            "example": "66d8a90efca05bf0ee47593a"
          },
          "photo": {
            "description": "Contact's photo-URL",
            "type": "string",
            "example": "https://res.cloudinary.com/dbwvfktxa/image/upload/v1725475085/obycnfqz.jpg"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request, invalid input data.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid input data. Please check the request body."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict, email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred."
                }
              }
            }
          }
        }
      }
    }
  }
}
